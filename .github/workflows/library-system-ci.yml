name: Build and Test Library Management System

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17 for x64
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
          architecture: x64

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build with Maven
        run: mvn clean install

      - name: Run Cucumber and Integration Tests
        run: mvn verify

      # JaCoCo Code Coverage Reporting using PavanMudigonda/jacoco-reporter action
      - name: JaCoCo Code Coverage Report
        id: jacoco_reporter
        uses: PavanMudigonda/jacoco-reporter@v5.0
        with:
          coverage_results_path: target/jacoco-test-coverage.xml  # Path to your JaCoCo XML report
          coverage_report_name: Coverage
          coverage_report_title: JaCoCo Coverage Report
          github_token: ${{ secrets.GITHUB_TOKEN }}
          skip_check_run: false
          minimum_coverage: 80  # Optional: Set a minimum threshold for coverage
          fail_below_threshold: false  # Optional: Fail the build if coverage is below threshold
          publish_only_summary: false  # Optional: Publish the full report or just the summary

      # Optional: Add JaCoCo coverage summary to the workflow run summary
      - name: Add JaCoCo Report to Workflow Run Summary
        run: |
          echo "| Outcome | Value |" >> $GITHUB_STEP_SUMMARY
          echo "| --- | --- |" >> $GITHUB_STEP_SUMMARY
          echo "| Code Coverage % | ${{ steps.jacoco_reporter.outputs.coverage_percentage }} |" >> $GITHUB_STEP_SUMMARY
          echo "| :heavy_check_mark: Number of Lines Covered | ${{ steps.jacoco_reporter.outputs.covered_lines }} |" >> $GITHUB_STEP_SUMMARY
          echo "| :x: Number of Lines Missed | ${{ steps.jacoco_reporter.outputs.missed_lines }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Total Number of Lines | ${{ steps.jacoco_reporter.outputs.total_lines }} |" >> $GITHUB_STEP_SUMMARY

      # Optional: Upload the coverage report as an artifact (Markdown)
      - name: Upload Code Coverage Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage-report-markdown
          path: */coverage-results.md
          retention-days: 1
